{"version":3,"sources":["common/components/header.tsx","common/hook/useComment.tsx","common/hook/useTucao.tsx","common/components/tucao.tsx","index/components/comment.tsx","index/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","useState","active","setActive","h","w","bg","color","flexDir","justify","align","fontSize","textShadow","fontWeight","letterSpacing","style","fontVariant","flex","paddingRight","alignItems","to","onClick","fetcher","url","fetch","then","r","text","Parser","parseString","feed","items","comments","map","c","contentSnippet","split","title","module","replace","json","tucaoList","beReplyCommentIds","forEach","tucao","matchReplyId","comment_content","match","length","replyId","Number","push","replaceAll","comment_reply","find","x","comment_ID","filter","includes","Tucao","props","TucaoItem","item","paddingLeft","borderLeftStyle","borderLeftWidth","borderLeftColor","comment_author","id","useSWR","data","error","isTucaoLoading","isTucaoError","useTucao","console","spacing","mt","noOfLines","toString","Comment","useBoolean","tucaoFlag","setTucaoFlag","activeComment","setActiveComment","activeTucaoCommentId","setActiveTucaoCommentId","sectionRef","useRef","commentRef","tucaoRef","useOutsideClick","ref","handler","off","comment","isCommentLoading","isCommentError","useComment","overflow","sx","display","on","guid","link","substring","lastIndexOf","author","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a786a4f9.chunk.js","sourcesContent":["import {Flex} from \"@chakra-ui/react\";\r\nimport { Link} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nfunction Header() {\r\n\r\n    const [active,setActive] = useState('comment');\r\n\r\n\r\n    return (\r\n        <Flex h={'100vh'} w={'20rem'} bg={'white'} color={'blackAlpha.300'} flexDir={'column'} justify={'space-between'} align={'center'}>\r\n            <Flex h={'7rem'} w={'100%'} fontSize={'4rem'} textShadow={'0px 0px 20px #e7e7e7'} fontWeight={500} letterSpacing={'-0.3rem'} style={{fontVariant:'diagonal-fractions'}} justify={'left'}>\r\n                SPACE4FUN\r\n            </Flex>\r\n\r\n            <Flex flex={1} w={'100%'} fontSize={'3rem'} paddingRight={'1rem'} alignItems={'end'} justify={'start'} flexDir={'column'}>\r\n                <Link to=\"/\" onClick={() => setActive('comment')}>{active === 'comment' ? '>': ''} 优评</Link>\r\n                {/*<Link to=\"/test\" onClick={() => setActive('test')}>{active === 'test' ? '>': ''} Expenses</Link>*/}\r\n            </Flex>\r\n\r\n            <Flex flex={1} justify={'right'}>\r\n\r\n            </Flex>\r\n\r\n\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import useSWR, { Key, Fetcher } from 'swr'\r\nimport Parser from \"rss-parser\";\r\nimport {comment} from \"../type\";\r\n\r\n\r\nconst url: Key = \"https://spac4fun.herokuapp.com/jandan/top-comments\"\r\nconst fetcher:Fetcher<comment[],string> = (url) => fetch(url)\r\n        .then(r=>r.text())\r\n        .then(text => new Parser().parseString(text))\r\n        .then(feed => feed.items as comment[])\r\n        .then(comments => comments.map(c => {\r\n            const [title,] = c.contentSnippet.split('\\n');\r\n            c.module = title;\r\n            c.contentSnippet = c.contentSnippet.replace(c.module+'\\n','');\r\n            return c;\r\n        }))\r\nexport function useComment() {\r\n    const { data, error } = useSWR(url, fetcher)\r\n\r\n    return {\r\n        comment: data,\r\n        isCommentLoading: !error && !data,\r\n        isCommentError: error,\r\n    }\r\n}","import useSWR, {  Fetcher } from 'swr'\r\nimport {tucao} from \"../type\";\r\n\r\n\r\nconst fetcher:Fetcher<tucao[],string> = (url) => fetch(url)\r\n    .then(r=> r.json())\r\n    .then(json => {\r\n        if ('message' in json) return [];\r\n        if (json['hot_tucao'] === null) return json['tucao'] as tucao[];\r\n        return json['hot_tucao'] as tucao[];\r\n    })\r\n    .then(tucaoList => {\r\n        if (tucaoList === []) return [];\r\n        const beReplyCommentIds:number[] = [];\r\n        tucaoList.forEach(tucao => {\r\n            const matchReplyId = tucao.comment_content.match(/tucao-(\\d*)/);\r\n            if (matchReplyId && matchReplyId.length > 1) {\r\n                const replyId = Number(matchReplyId[1]);\r\n                beReplyCommentIds.push(replyId);\r\n                tucao.comment_content = tucao.comment_content.replaceAll(/<a.*>/gm,'');\r\n                tucao.comment_reply = tucaoList.find(x=> x.comment_ID === replyId) ?? null;\r\n            }\r\n        })\r\n        tucaoList = tucaoList.filter(x=>!beReplyCommentIds.includes(x.comment_ID));\r\n        return tucaoList;\r\n    });\r\n\r\n\r\nexport function useTucao(id:string) {\r\n    const { data, error } = useSWR(`https://worker.space4.fun${id}`, fetcher)\r\n\r\n    return {\r\n        tucao: data,\r\n        isTucaoLoading: !error && !data,\r\n        isTucaoError: error,\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Box, List, ListItem, SkeletonText, Text} from \"@chakra-ui/react\";\r\nimport {useTucao} from \"../hook/useTucao\";\r\nimport {tucao} from \"../type\";\r\n\r\ntype props = {\r\n    id:string\r\n}\r\n\r\nfunction Tucao(props:props) {\r\n\r\n    const TucaoItem = (props: { item: tucao; }) => {\r\n        const item = props.item;\r\n        return (\r\n            <Box paddingLeft={'0.7rem'} borderLeftStyle={'solid'} borderLeftWidth={'0.5rem'} borderLeftColor={'blackAlpha.500'}>\r\n                <Text color={'blackAlpha.500'}>{item.comment_author}</Text>\r\n                {item.comment_reply  && <TucaoItem  item={item.comment_reply}/>}\r\n                <Text color={'blue.900'}>{item.comment_content}</Text>\r\n            </Box>\r\n        )\r\n    }\r\n\r\n    const {tucao,isTucaoError,isTucaoLoading} = useTucao(props.id);\r\n    if (isTucaoError) console.error(isTucaoError)\r\n\r\n    return (\r\n        <List spacing={4}>\r\n            {\r\n                isTucaoLoading ?\r\n                    <SkeletonText mt='4' noOfLines={4} spacing='4' />\r\n                        : isTucaoError || !tucao ? <Box> error </Box>\r\n                        : tucao.map(item =>\r\n                            <ListItem key={item.comment_ID.toString()}>\r\n                                <TucaoItem item={item} />\r\n                                {/*<Text color={'blackAlpha.500'}>{item.comment_author}</Text>*/}\r\n                                {/*<Text color={'blue.900'}>{item.comment_content}</Text>*/}\r\n                            </ListItem>)\r\n            }\r\n        </List>\r\n\r\n    );\r\n}\r\n\r\nexport default Tucao;\r\n","import React, { useRef, useState} from 'react';\r\nimport {Box, Flex, List, ListItem,  SkeletonText, Text, useBoolean, useOutsideClick} from \"@chakra-ui/react\";\r\nimport {useComment} from \"../../common/hook/useComment\";\r\nimport Tucao from \"../../common/components/tucao\";\r\n\r\n\r\nfunction Comment() {\r\n\r\n    const [tucaoFlag,setTucaoFlag] = useBoolean(false);\r\n    const [activeComment,setActiveComment] = useState(\"\");\r\n    const [activeTucaoCommentId,setActiveTucaoCommentId] = useState(\"\");\r\n    const sectionRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n    const commentRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n    const tucaoRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n    useOutsideClick({\r\n        ref: sectionRef,\r\n        handler: () => {\r\n            setTucaoFlag.off();\r\n            setActiveComment('');\r\n        },\r\n    })\r\n    const {comment,isCommentLoading,isCommentError} = useComment();\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Flex justify={'center'} align={'stretch'}  h={'100vh'} >\r\n            <Flex justify={'center'} align={'stretch'}  ref={sectionRef} >\r\n                <Box ref={commentRef} w={'40vw'} paddingRight={'1rem'} overflow={tucaoFlag ? 'hidden':'auto'} sx={{'::-webkit-scrollbar':{display:'none'}}}>\r\n                    <List spacing={4} >\r\n                        {\r\n                            isCommentLoading ?\r\n                                <SkeletonText mt='4' noOfLines={4} spacing='4' />\r\n                                : isCommentError || !comment ? <Box> error </Box>\r\n                                : comment.map(item =>\r\n                                    <ListItem  key={item.guid} onClick={()=>{\r\n                                        setTucaoFlag.on();\r\n                                        setActiveComment(item.guid);\r\n                                        setActiveTucaoCommentId(item.link.substring(item.link.lastIndexOf('/')))\r\n                                    }}>\r\n                                        <Text color={tucaoFlag !== (item.guid === activeComment) ? 'white' : 'blackAlpha.500'}>{item.module} {item.author}:</Text>\r\n                                        <Text color={tucaoFlag !== (item.guid === activeComment) ? 'white' : 'blue.900'}>{item.contentSnippet}</Text>\r\n                                    </ListItem>\r\n                                )\r\n                        }\r\n                    </List>\r\n\r\n                </Box>\r\n                <Box ref={tucaoRef} w={'30vw'} display={tucaoFlag ? 'block':'none'} overflow={'auto'}  sx={{'::-webkit-scrollbar':{display:'none'}}}>\r\n                    <Tucao id={activeTucaoCommentId} />\r\n\r\n                </Box>\r\n            </Flex>\r\n        </Flex>\r\n\r\n    );\r\n}\r\n\r\nexport default Comment;\r\n","import Header from \"../common/components/header\";\r\nimport Comment from \"./components/comment\";\r\nimport {Flex} from \"@chakra-ui/react\";\r\nimport {Routes, Route} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n      <Flex flexDir={'row'} justify={'center'} bg={'white'} h={'100vh'} >\r\n        <Header />\r\n          <Routes>\r\n              <Route path=\"/\" element={<Comment />} />\r\n              <Route path=\"/test\" element={<h1>hello</h1>} />\r\n          </Routes>\r\n      </Flex>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './index/App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ChakraProvider } from '@chakra-ui/react'\r\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\r\nroot.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n          <ChakraProvider>\r\n              <App />\r\n          </ChakraProvider>\r\n      </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}