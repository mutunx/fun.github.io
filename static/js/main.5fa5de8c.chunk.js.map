{"version":3,"sources":["common/components/menu.tsx","common/components/header.tsx","common/hook/useComment.tsx","common/hook/useTucao.tsx","common/components/tucao.tsx","index/components/content.tsx","index/App.tsx","reportWebVitals.ts","index.tsx"],"names":["HeaderMenu","color","title","Header","h","w","bg","flexDir","justify","align","flex","style","fetcher","url","fetch","then","r","text","Parser","parseString","feed","items","json","Tucao","props","id","useSWR","data","error","tucao","isTucaoLoading","isTucaoError","useTucao","console","spacing","mt","noOfLines","map","item","comment_author","comment_content","comment_ID","toString","Content","useBoolean","tucaoFlag","setTucaoFlag","useState","activeComment","setActiveComment","activeTucaoCommentId","setActiveTucaoCommentId","sectionRef","useRef","commentRef","tucaoRef","useOutsideClick","ref","handler","off","comment","isCommentLoading","isCommentError","useComment","onWheel","e","current","scrollBy","deltaX","deltaY","overflow","sx","display","onClick","on","guid","link","substring","lastIndexOf","author","contentSnippet","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.5fa5de8c.chunk.js","sourcesContent":["import {Menu, MenuButton, MenuDivider, MenuGroup, MenuItem, MenuList, Text} from \"@chakra-ui/react\";\r\n\r\n\r\nfunction HeaderMenu() {\r\n    return (\r\n        <Menu>\r\n            <MenuButton >\r\n                SPACE4FUN\r\n            </MenuButton>\r\n            <MenuList color={'blue.900'}>\r\n                <MenuItem>总览</MenuItem>\r\n                <MenuDivider />\r\n                <MenuGroup title={'煎蛋'}>\r\n                    <MenuItem>热评</MenuItem>\r\n                </MenuGroup>\r\n            </MenuList>\r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default HeaderMenu;\r\n","import HeaderMenu from \"./menu\";\r\nimport {Flex} from \"@chakra-ui/react\";\r\nfunction Header() {\r\n    return (\r\n        <Flex h={'2rem'} w={'100vw'} bg={'blue.900'} color={'blue.50'} flexDir={'row'} justify={'space-between'} align={'center'}>\r\n            <Flex flex={1} justify={'left'}>\r\n                <HeaderMenu />\r\n            </Flex>\r\n\r\n            <Flex flex={1} justify={'center'}>\r\n                {/*<HeaderBreadcrumb />*/}\r\n                <span style={{color:\"white\"}}>主页/煎蛋/优评</span>\r\n            </Flex>\r\n\r\n            <Flex flex={1} justify={'right'}>\r\n\r\n            </Flex>\r\n\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import useSWR, { Key, Fetcher } from 'swr'\r\nimport Parser from \"rss-parser\";\r\nimport {comment} from \"../type\";\r\n\r\n\r\nconst url: Key = \"https://spac4fun.herokuapp.com/jandan/top-comments\"\r\nconst fetcher:Fetcher<comment[],string> = (url) => fetch(url)\r\n        .then(r=>r.text())\r\n        .then(text => new Parser().parseString(text))\r\n        .then(feed => feed.items as comment[])\r\nexport function useComment() {\r\n    const { data, error } = useSWR(url, fetcher)\r\n\r\n    return {\r\n        comment: data,\r\n        isCommentLoading: !error && !data,\r\n        isCommentError: error,\r\n    }\r\n}","import useSWR, {  Fetcher } from 'swr'\r\nimport {tucao} from \"../type\";\r\n\r\n\r\nconst fetcher:Fetcher<tucao[],string> = (url) => fetch(url)\r\n    .then(r=> r.json()).then(json => {\r\n        if ('message' in json) return [];\r\n        if (json['hot_tucao'] === null) return json['tucao'];\r\n        return json['hot_tucao'];\r\n    })\r\n\r\n\r\nexport function useTucao(id:string) {\r\n    const { data, error } = useSWR(`https://tucao.space4fun.workers.dev${id}`, fetcher)\r\n\r\n    return {\r\n        tucao: data,\r\n        isTucaoLoading: !error && !data,\r\n        isTucaoError: error,\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Box, List, ListItem, SkeletonText, Text} from \"@chakra-ui/react\";\r\nimport {useTucao} from \"../hook/useTucao\";\r\n\r\ntype props = {\r\n    id:string\r\n}\r\n\r\nfunction Tucao(props:props) {\r\n\r\n    const {tucao,isTucaoError,isTucaoLoading} = useTucao(props.id);\r\n    if (isTucaoError) console.error(isTucaoError)\r\n\r\n    return (\r\n        <List spacing={4}>\r\n            {\r\n                isTucaoLoading ?\r\n                    <SkeletonText mt='4' noOfLines={4} spacing='4' />\r\n                        : isTucaoError || !tucao ? <Box> error </Box>\r\n                        : tucao.map(item =>\r\n                            <ListItem key={item.comment_ID.toString()}>\r\n                                <Text color={'blue.400'}>{item.comment_author}</Text>\r\n                                <Text color={'blue.900'}>{item.comment_content}</Text>\r\n                            </ListItem>)\r\n            }\r\n        </List>\r\n\r\n    );\r\n}\r\n\r\nexport default Tucao;\r\n","import React, {BaseSyntheticEvent, SyntheticEvent, useEffect, useRef, useState} from 'react';\r\nimport {Box, Flex, List, ListItem,  SkeletonText, Text, useBoolean, useOutsideClick} from \"@chakra-ui/react\";\r\nimport {useComment} from \"../../common/hook/useComment\";\r\nimport Tucao from \"../../common/components/tucao\";\r\n\r\n\r\nfunction Content() {\r\n\r\n    const [tucaoFlag,setTucaoFlag] = useBoolean(false);\r\n    const [activeComment,setActiveComment] = useState(\"\");\r\n    const [activeTucaoCommentId,setActiveTucaoCommentId] = useState(\"\");\r\n    const sectionRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n    const commentRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n    const tucaoRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n    useOutsideClick({\r\n        ref: sectionRef,\r\n        handler: () => {\r\n            setTucaoFlag.off();\r\n            setActiveComment('');\r\n        },\r\n    })\r\n    const {comment,isCommentLoading,isCommentError} = useComment();\r\n\r\n\r\n    function scrollEvent(e: React.WheelEvent) {\r\n        const scrollObj = tucaoFlag ? tucaoRef.current : commentRef.current;\r\n        scrollObj.scrollBy(e.deltaX,e.deltaY);\r\n    }\r\n\r\n    return (\r\n        <Flex justify={'center'} align={'stretch'} onWheel={scrollEvent} h={'calc(100vh - 2rem)'} >\r\n            <Flex justify={'center'} align={'stretch'}  ref={sectionRef} >\r\n                <Box ref={commentRef} w={'60vw'} overflow={tucaoFlag ? 'hidden':'auto'} sx={{'::-webkit-scrollbar':{display:'none'}}}>\r\n                    <List spacing={4} >\r\n                        {\r\n                            isCommentLoading ?\r\n                                <SkeletonText mt='4' noOfLines={4} spacing='4' />\r\n                                : isCommentError || !comment ? <Box> error </Box>\r\n                                : comment.map(item =>\r\n                                    <ListItem  key={item.guid} onClick={()=>{\r\n                                        setTucaoFlag.on();\r\n                                        setActiveComment(item.guid);\r\n                                        setActiveTucaoCommentId(item.link.substring(item.link.lastIndexOf('/')))\r\n                                    }}>\r\n                                        <Text color={tucaoFlag !== (item.guid === activeComment) ? 'gray.50' : 'blue.400'}>{item.author}</Text>\r\n                                        <Text color={tucaoFlag !== (item.guid === activeComment) ? 'gray.50' : 'blue.900'}>{item.contentSnippet}</Text>\r\n                                    </ListItem>\r\n                                )\r\n                        }\r\n                    </List>\r\n\r\n                </Box>\r\n                <Box ref={tucaoRef} w={'30vw'} display={tucaoFlag ? 'block':'none'} overflow={'auto'}  sx={{'::-webkit-scrollbar':{display:'none'}}}>\r\n                    <Tucao id={activeTucaoCommentId} />\r\n\r\n                </Box>\r\n            </Flex>\r\n        </Flex>\r\n\r\n    );\r\n}\r\n\r\nexport default Content;\r\n","import Header from \"../common/components/header\";\r\nimport Content from \"./components/content\";\r\nimport {Flex} from \"@chakra-ui/react\";\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n      <Flex flexDir={'column'} bg={'gray.50'} h={'100vh'} >\r\n        <Header />\r\n        <Content />\r\n      </Flex>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './index/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ChakraProvider } from '@chakra-ui/react'\r\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\r\nroot.render(\r\n  <React.StrictMode>\r\n      <ChakraProvider>\r\n          <App />\r\n      </ChakraProvider>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}