{"version":3,"sources":["common/components/header.tsx","common/hook/useComment.tsx","index/components/jdComment.tsx","common/hook/useTucao.tsx","common/components/tucao.tsx","common/hook/useV2ex.tsx","index/components/v2ex.tsx","common/hook/useV2exPost.tsx","common/components/v2exPost.tsx","common/resolver/RSSHub.tsx","common/entities/Resolver.tsx","index/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","useState","active","setActive","h","w","bg","color","flexDir","justify","align","fontSize","textShadow","fontWeight","letterSpacing","style","fontVariant","flex","paddingRight","alignItems","to","onClick","href","target","fetcher","url","fetch","then","r","text","Parser","parseString","feed","items","comments","map","c","contentSnippet","split","title","module","replace","JdComment","setActiveComment","useBoolean","beClicked","setBeClicked","guid","setGuid","listRef","useRef","useSWR","data","error","comment","isCommentLoading","isCommentError","useComment","useOutsideClick","ref","handler","off","spacing","mt","noOfLines","item","on","link","substring","lastIndexOf","author","json","tucaoList","beReplyCommentIds","forEach","tucao","matchReplyId","comment_content","match","length","replyId","Number","push","replaceAll","comment_reply","find","x","comment_ID","filter","includes","Tucao","props","TucaoItem","paddingLeft","borderLeftStyle","borderLeftWidth","borderLeftColor","comment_author","id","isTucaoLoading","isTucaoError","useTucao","console","toString","rssItems","content","V2ex","type","tucaoFlag","setTucaoFlag","activePost","setActivePost","v2ex","isV2exLoading","isV2exError","useV2ex","parse","reverse","replyUsers","matchAll","child","userMatch","userReply","creator","reply","V2exPost","PostItem","v2exPost","isV2exPostLoading","isV2exPostError","useV2exPost","RSSHub","config","follows","video","followed","follow","response","ok","name","this","Error","App","activeComment","sectionRef","postRef","commentRef","scrollEvent","e","current","scrollBy","deltaX","deltaY","useEffect","listVideo","juConfig","onWheel","stopPropagation","overflow","sx","display","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2fda09c0.chunk.js","sourcesContent":["import {Flex} from \"@chakra-ui/react\";\r\nimport { Link} from \"react-router-dom\";\r\nimport React, {useState} from \"react\";\r\nfunction Header() {\r\n\r\n    const [active,setActive] = useState('comment');\r\n\r\n\r\n    return (\r\n        <Flex h={'100vh'} w={'10rem'} bg={'white'} color={'blackAlpha.300'} flexDir={'column'} justify={'space-between'} align={'center'}>\r\n            <Flex justify={'space-around'}  h={'6rem'} w={'100%'} fontSize={'4rem'} textShadow={'0px 0px 20px #e7e7e7'} fontWeight={500} letterSpacing={'-0.3rem'} style={{fontVariant:'diagonal-fractions'}} >\r\n                S4F\r\n            </Flex>\r\n\r\n            <Flex flex={1} w={'100%'} fontSize={'1.5rem'} paddingRight={'1rem'} alignItems={'end'} justify={'start'} flexDir={'column'}>\r\n                <Link to=\"/\" onClick={() => setActive('comment')}>{active === 'comment' ? '>': ''} 煎蛋优评</Link>\r\n                <Link to=\"/v2ex/hot\" onClick={() => setActive('v2exHot')}>{active === 'v2exHot' ? '>': ''} v2ex热榜</Link>\r\n            </Flex>\r\n\r\n            <Flex flex={1} justify={'right'}>\r\n\r\n            </Flex>\r\n\r\n            <a href=\"https://beian.miit.gov.cn/\" target=\"_blank\">浙ICP备2021020537号-1</a>\r\n\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import useSWR, { Key, Fetcher } from 'swr'\r\nimport Parser from \"rss-parser\";\r\nimport {rssItem} from \"../type\";\r\n\r\n\r\nconst url: Key = \"https://rsshub-git-main-mutunx.vercel.app/jandan/top-comments\"\r\nconst fetcher:Fetcher<rssItem[],string> = (url) => fetch(url)\r\n        .then(r=>r.text())\r\n        .then(text => new Parser().parseString(text))\r\n        .then(feed => feed.items as rssItem[])\r\n        .then(comments => comments.map(c => {\r\n            const [title,] = c.contentSnippet.split('\\n');\r\n            c.module = title;\r\n            c.contentSnippet = c.contentSnippet.replace(c.module+'\\n','');\r\n            return c;\r\n        }))\r\nexport function useComment() {\r\n    const { data, error } = useSWR(url, fetcher)\r\n\r\n    return {\r\n        comment: data,\r\n        isCommentLoading: !error && !data,\r\n        isCommentError: error,\r\n    }\r\n}\r\n","import React, { useRef, useState} from 'react';\r\nimport {Box, List, ListItem,  SkeletonText, Text, useBoolean, useOutsideClick} from \"@chakra-ui/react\";\r\nimport {useComment} from \"../../common/hook/useComment\";\r\n\r\ntype props = {\r\n    setActiveComment:Function,\r\n}\r\n\r\nfunction JdComment({setActiveComment}:props) {\r\n\r\n    const [beClicked,setBeClicked] = useBoolean(false);\r\n    const [guid,setGuid] = useState(\"\");\r\n    const listRef = useRef() as React.RefObject<HTMLLIElement>;\r\n    const {comment,isCommentLoading,isCommentError} = useComment();\r\n    useOutsideClick({\r\n        ref: listRef,\r\n        handler: () => {\r\n            setBeClicked.off();\r\n            setGuid('');\r\n        },\r\n    })\r\n    return (\r\n            <List spacing={4} >\r\n                {\r\n                    isCommentLoading ?\r\n                        <SkeletonText mt='4' noOfLines={4} spacing='4' />\r\n                        : isCommentError || !comment ? <Box> error </Box>\r\n                        : comment.map(item =>\r\n                            <ListItem  key={item.guid} onClick={()=>{\r\n                                setBeClicked.on();\r\n                                setGuid(item.guid);\r\n                                setActiveComment(item.link.substring(item.link.lastIndexOf('/')))\r\n                            }}>\r\n                                <Text color={beClicked !== (item.guid === guid) ? 'white' : 'blackAlpha.500'}>{item.module} {item.author}:</Text>\r\n                                <Text color={beClicked !== (item.guid === guid) ? 'white' : 'blue.900'}>{item.contentSnippet}</Text>\r\n                            </ListItem>\r\n                        )\r\n                }\r\n            </List>\r\n\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default JdComment;\r\n","import useSWR, {  Fetcher } from 'swr'\r\nimport {tucao} from \"../type\";\r\n\r\n\r\nconst fetcher:Fetcher<tucao[],string> = (url) => fetch(url)\r\n    .then(r=> r.json())\r\n    .then(json => {\r\n        if ('message' in json) return [];\r\n        if (json['hot_tucao'] === null) return json['tucao'] as tucao[];\r\n        return json['hot_tucao'] as tucao[];\r\n    })\r\n    .then(tucaoList => {\r\n        if (tucaoList === []) return [];\r\n        const beReplyCommentIds:number[] = [];\r\n        tucaoList.forEach(tucao => {\r\n            const matchReplyId = tucao.comment_content.match(/tucao-(\\d*)/);\r\n            if (matchReplyId && matchReplyId.length > 1) {\r\n                const replyId = Number(matchReplyId[1]);\r\n                beReplyCommentIds.push(replyId);\r\n                tucao.comment_content = tucao.comment_content.replaceAll(/<a.*>/gm,'');\r\n                tucao.comment_reply = tucaoList.find(x=> x.comment_ID === replyId) ?? null;\r\n            }\r\n        })\r\n        tucaoList = tucaoList.filter(x=>!beReplyCommentIds.includes(x.comment_ID));\r\n        return tucaoList;\r\n    });\r\n\r\n\r\nexport function useTucao(id:string) {\r\n    const { data, error } = useSWR(`https://worker.space4.fun${id}`, fetcher)\r\n\r\n    return {\r\n        tucao: data,\r\n        isTucaoLoading: !error && !data,\r\n        isTucaoError: error,\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Box, List, ListItem, SkeletonText, Text} from \"@chakra-ui/react\";\r\nimport {useTucao} from \"../hook/useTucao\";\r\nimport {tucao} from \"../type\";\r\n\r\ntype props = {\r\n    id:string\r\n}\r\n\r\nfunction Tucao(props:props) {\r\n\r\n    const TucaoItem = (props: { item: tucao; }) => {\r\n        const item = props.item;\r\n        return (\r\n            <Box paddingLeft={'0.7rem'} borderLeftStyle={'solid'} borderLeftWidth={'0.5rem'} borderLeftColor={'blackAlpha.500'}>\r\n                {item.comment_reply  && <TucaoItem  item={item.comment_reply}/>}\r\n                <Text color={'blackAlpha.500'}>{item.comment_author}</Text>\r\n                <Text color={'blue.900'}>{item.comment_content}</Text>\r\n            </Box>\r\n        )\r\n    }\r\n\r\n    const {tucao,isTucaoError,isTucaoLoading} = useTucao(props.id);\r\n    if (isTucaoError) console.error(isTucaoError)\r\n\r\n    return (\r\n        <List spacing={4}>\r\n            {\r\n                isTucaoLoading ?\r\n                    <SkeletonText mt='4' noOfLines={4} spacing='4' />\r\n                        : isTucaoError || !tucao ? <Box> error </Box>\r\n                        : tucao.map(item =>\r\n                            <ListItem key={item.comment_ID.toString()}>\r\n                                <TucaoItem item={item} />\r\n                            </ListItem>)\r\n            }\r\n        </List>\r\n\r\n    );\r\n}\r\n\r\nexport default Tucao;\r\n","import useSWR, { Key, Fetcher } from 'swr'\r\nimport Parser from \"rss-parser\";\r\nimport {rssItem} from \"../type\";\r\n\r\n\r\nconst url: Key = \"https://rsshub-git-main-mutunx.vercel.app/v2ex/topics/\"\r\nconst fetcher:Fetcher<rssItem[],string> = (url) => fetch(url)\r\n        .then(r=>r.text())\r\n        .then(text => new Parser().parseString(text))\r\n        .then(feed => feed.items as rssItem[])\r\n    .then(rssItems => {\r\n        rssItems.forEach(item => item.content = item.content.replace(`${item.author}: `,''))\r\n        return rssItems;\r\n    })\r\n\r\nexport function useV2ex(type:string) {\r\n\r\n    const { data, error } = useSWR(url+type, fetcher)\r\n\r\n    return {\r\n        v2ex: data,\r\n        isV2exLoading: !error && !data,\r\n        isV2exError: error,\r\n    }\r\n}\r\n","import React, { useRef, useState} from 'react';\r\nimport {Box, List, ListItem,  SkeletonText, Text, useBoolean, useOutsideClick} from \"@chakra-ui/react\";\r\nimport {useV2ex} from \"../../common/hook/useV2ex\";\r\nimport parse from 'html-react-parser';\r\n\r\ntype props = {\r\n    setActiveComment:Function,\r\n    type:string\r\n}\r\n\r\nfunction V2ex({setActiveComment,type}:props) {\r\n    const [tucaoFlag,setTucaoFlag] = useBoolean(false);\r\n    const [activePost,setActivePost] = useState(\"\");\r\n    const listRef = useRef() as React.RefObject<HTMLLIElement>;\r\n    const {v2ex,isV2exLoading,isV2exError} = useV2ex(type);\r\n\r\n    useOutsideClick({\r\n        ref: listRef,\r\n        handler: () => {\r\n            setTucaoFlag.off();\r\n            setActivePost('');\r\n        },\r\n    })\r\n\r\n\r\n    return (\r\n        <List  spacing={4} >\r\n            {\r\n                isV2exLoading ?\r\n                    <SkeletonText mt='4' noOfLines={4} spacing='4' />\r\n                    : isV2exError || !v2ex ? <Box> error </Box>\r\n                    : v2ex.map(item =>\r\n                        <ListItem ref={listRef} key={item.guid} onClick={()=>{\r\n                            setTucaoFlag.on();\r\n                            setActivePost(item.guid);\r\n                            setActiveComment(item.guid)\r\n                        }}>\r\n                            <Text color={tucaoFlag !== (item.guid === activePost) ? 'white' : 'blackAlpha.500'}>{item.title} by  {item.author}</Text>\r\n                            <Box color={tucaoFlag !== (item.guid === activePost) ? 'white' : 'blue.900'}>{parse(item.content)}</Box>\r\n                        </ListItem>\r\n                    )\r\n            }\r\n        </List>\r\n\r\n    );\r\n}\r\n\r\nexport default V2ex;\r\n","import useSWR, { Key, Fetcher } from 'swr'\r\nimport Parser from \"rss-parser\";\r\nimport {rssItem} from \"../type\";\r\n\r\n\r\nconst url: Key = \"https://rsshub-git-main-mutunx.vercel.app/v2ex/post/\"\r\nconst fetcher:Fetcher<rssItem[],string> = (url) => fetch(url)\r\n        .then(r=>r.text())\r\n        .then(text => new Parser().parseString(text))\r\n        .then(feed => feed.items.reverse() as rssItem[])\r\n        .then(rssItems => {\r\n            rssItems.forEach(item => {\r\n                const replyUsers = [...item.content.matchAll(/<a.*?>(.*?)<\\/a>/gm)]\r\n                if (replyUsers.length > 0) {\r\n                    const child:rssItem[] = [];\r\n                    replyUsers.forEach(userMatch => {\r\n                        const userReply = rssItems.find(item => item.creator === userMatch[1]);\r\n                        if (userReply) child.push(userReply);\r\n\r\n                    })\r\n                    item.reply = child;\r\n                }\r\n            })\r\n            return rssItems;\r\n        })\r\n\r\nexport function useV2exPost(id:string) {\r\n\r\n    const { data, error } = useSWR(url+id, fetcher)\r\n\r\n    return {\r\n        v2exPost: data,\r\n        isV2exPostLoading: !error && !data,\r\n        isV2exPostError: error,\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Box, List, ListItem, SkeletonText, Text} from \"@chakra-ui/react\";\r\nimport {rssItem} from \"../type\";\r\nimport {useV2exPost} from \"../hook/useV2exPost\";\r\n\r\ntype props = {\r\n    id:string\r\n}\r\n\r\nfunction V2exPost({id}:props) {\r\n\r\n    const PostItem = (props: { item: rssItem; }) => {\r\n        const item = props.item;\r\n        return (\r\n            <Box paddingLeft={'0.7rem'} borderLeftStyle={'solid'} borderLeftWidth={'0.5rem'} borderLeftColor={'blackAlpha.500'}>\r\n                {item.reply  && item.reply.map(r => <PostItem key={item.guid+r.guid}  item={r}/>)}\r\n                <Text color={'blackAlpha.500'}>{item.author}</Text>\r\n                <Text color={'blue.900'}>{item.contentSnippet}</Text>\r\n            </Box>\r\n        )\r\n    }\r\n    const {v2exPost,isV2exPostLoading,isV2exPostError} = useV2exPost(id);\r\n\r\n    return (\r\n        <List spacing={4}>\r\n            {\r\n                isV2exPostLoading ?\r\n                    <SkeletonText mt='4' noOfLines={4} spacing='4' />\r\n                        : isV2exPostError || !v2exPost ? <Box> error </Box>\r\n                        : v2exPost.map(item =>\r\n                            <ListItem key={item.guid}>\r\n                                <PostItem key={item.guid} item={item} />\r\n                            </ListItem>)\r\n            }\r\n        </List>\r\n\r\n    );\r\n}\r\n\r\nexport default V2exPost;\r\n","import {Resolver} from \"../entities/Resolver\";\r\nimport {content, juConfig} from \"../entities/types\";\r\n\r\nexport class RSSHub extends Resolver {\r\n\r\n    async listVideo(config: juConfig): Promise<content[]> {\r\n        const follows = config.video.followed;\r\n        const contents = [];\r\n        for (let follow of follows) {\r\n            const url = follow.url;\r\n            const response = await fetch(url);\r\n            const responseOK = response && response.ok;\r\n            if (responseOK) {\r\n                let data = await response.json();\r\n                debugger;\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n\r\n}","import {content, juConfig} from \"./types\";\r\n\r\nexport class Resolver {\r\n    name:string\r\n\r\n    constructor(name:string) {\r\n        this.name = name;\r\n    }\r\n\r\n    listVideo(config:juConfig):Promise<content[]> {\r\n        throw new Error(\"no implement\")\r\n    }\r\n    listArticle(config:juConfig):Promise<content[]> {\r\n        throw new Error(\"no implement\")\r\n    }\r\n    listDiscussion(config:juConfig):Promise<content[]> {\r\n        throw new Error(\"no implement\")\r\n    }\r\n    listPicture(config:juConfig):Promise<content[]> {\r\n        throw new Error(\"no implement\")\r\n    }\r\n}","import Header from \"../common/components/header\";\r\nimport JdComment from \"./components/jdComment\";\r\nimport {Box, Flex, useOutsideClick} from \"@chakra-ui/react\";\r\nimport {Routes, Route} from \"react-router-dom\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport Tucao from \"../common/components/tucao\";\r\nimport V2ex from \"./components/v2ex\";\r\nimport V2exPost from \"../common/components/v2exPost\";\r\nimport * as juConfig from \"../common/juconfig.json\";\r\nimport {RSSHub} from \"../common/resolver/RSSHub\";\r\nfunction App() {\r\n    const [activeComment,setActiveComment] = useState(\"\");\r\n    const sectionRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n    const postRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n    const commentRef = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n    useOutsideClick({\r\n        ref: sectionRef,\r\n        handler: () => {\r\n            setActiveComment('');\r\n        },\r\n    })\r\n\r\n    useEffect(()=> {\r\n        const rss =  new RSSHub('rss');\r\n        rss.listVideo(juConfig.RSSHub);\r\n    },[])\r\n    function scrollEvent(e: React.WheelEvent) {\r\n        const scrollObj = activeComment === '' ? postRef.current : commentRef.current;\r\n        scrollObj.scrollBy(e.deltaX,e.deltaY);\r\n    }\r\n\r\n  return (\r\n      <Flex flexDir={'row'} onWheel={scrollEvent} justify={'center'} bg={'white'} h={'100vh'} >\r\n        <Header />\r\n\r\n          <Flex justify={'center'} align={'stretch'}  h={'100vh'} >\r\n              <Flex justify={'center'} align={'stretch'}  ref={sectionRef} >\r\n                  <Box ref={postRef} onWheel={activeComment === '' ? (e:React.WheelEvent)=> e.stopPropagation(): scrollEvent} w={'40vw'} paddingRight={'1rem'} overflow={activeComment !== '' ? 'hidden':'auto'} sx={{'::-webkit-scrollbar':{display:'none'}}}>\r\n                      <Routes>\r\n                          <Route path=\"/\" element={<JdComment setActiveComment={setActiveComment} />} />\r\n                          <Route path=\"/v2ex/hot\" element={<V2ex setActiveComment={setActiveComment} type={'hot'} />} />\r\n                      </Routes>\r\n                  </Box>\r\n                  <Box ref={commentRef} onWheel={(e:React.WheelEvent)=> e.stopPropagation()} w={'30vw'} display={activeComment !== '' ? 'block':'none'} overflow={'auto'}  sx={{'::-webkit-scrollbar':{display:'none'}}}>\r\n                      <Routes>\r\n                          <Route path=\"/\" element={<Tucao id={activeComment} />} />\r\n                          <Route path=\"/v2ex/hot\" element={<V2exPost id={activeComment} />} />\r\n                      </Routes>\r\n                  </Box>\r\n              </Flex>\r\n          </Flex>\r\n\r\n      </Flex>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './index/App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ChakraProvider } from '@chakra-ui/react'\r\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\r\nroot.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n          <ChakraProvider>\r\n              <App />\r\n          </ChakraProvider>\r\n      </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}